var c={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"uploadFile"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"arg"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"uploadInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"upload"},arguments:[{kind:"Argument",name:{kind:"Name",value:"arg"},value:{kind:"Variable",name:{kind:"Name",value:"arg"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"secure_urls"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:86}};c.loc.source={body:`mutation uploadFile($arg: uploadInput!) {
  upload(arg: $arg) {
    secure_urls
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function l(e,i){if(e.kind==="FragmentSpread")i.add(e.name.value);else if(e.kind==="VariableDefinition"){var n=e.type;n.kind==="NamedType"&&i.add(n.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){l(a,i)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){l(a,i)}),e.definitions&&e.definitions.forEach(function(a){l(a,i)})}var d={};(function(){c.definitions.forEach(function(i){if(i.name){var n=new Set;l(i,n),d[i.name.value]=n}})})();function f(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}function m(e,i){var n={kind:e.kind,definitions:[f(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,u=new Set,o=new Set;for(a.forEach(function(t){o.add(t)});o.size>0;){var s=o;o=new Set,s.forEach(function(t){if(!u.has(t)){u.add(t);var r=d[t]||new Set;r.forEach(function(v){o.add(v)})}})}return u.forEach(function(t){var r=f(e,t);r&&n.definitions.push(r)}),n}m(c,"uploadFile");export{c as d};
